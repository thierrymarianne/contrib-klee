name: CI

on:
  push:
    branches: main

jobs:
  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: ["LLVM 12"]
        registry_namespace: ["thierrymarianne/"]
        BASE_IMAGE: ["ubuntu:latest"]
        REPOSITORY: ["klee"]
        COVERAGE: [0]
        DISABLE_ASSERTIONS: [0]
        ENABLE_DOXYGEN: [0]
        ENABLE_OPTIMIZED: [1]
        ENABLE_DEBUG: [1]
        GTEST_VERSION: ["1.7.0"]
        KLEE_RUNTIME_BUILD: ["Release+Debug+Asserts"]
        LLVM_VERSION: [12]
        METASMT_VERSION: [qf_abv]
        MINISAT_VERSION: ["master"]
        REQUIRES_RTTI: [0]
        SANITIZER_BUILD: [""]
        SOLVERS: ["STP:Z3"]
        STP_VERSION: ["master"]
        TCMALLOC_VERSION: [2.7]
        UCLIBC_VERSION: ["klee_0_9_29"]
        USE_TCMALLOC: [0]
        USE_LIBCXX: [1]
        Z3_VERSION: ["4.8.4"]

    steps:
      - name: Checkout KLEE source code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push LLVM image
        uses: docker/build-push-action@v2.2.2
        with:
          context: ./docker/01_llvm
          push: true
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            REPOSITORY=${{ matrix.REPOSITORY }}
            COVERAGE=${{ matrix.COVERAGE }}
            DISABLE_ASSERTIONS=${{ matrix.DISABLE_ASSERTIONS }}
            ENABLE_DOXYGEN=${{ matrix.ENABLE_DOXYGEN }}
            ENABLE_OPTIMIZED=${{ matrix.ENABLE_OPTIMIZED }}
            ENABLE_DEBUG=${{ matrix.ENABLE_DEBUG }}
            GTEST_VERSION=${{ matrix.GTEST_VERSION }}
            KLEE_RUNTIME_BUILD=${{ matrix.KLEE_RUNTIME_BUILD }}
            LLVM_VERSION=${{ matrix.LLVM_VERSION }}
            METASMT_VERSION=${{ matrix.METASMT_VERSION }}
            MINISAT_VERSION=${{ matrix.MINISAT_VERSION }}
            REQUIRES_RTTI=${{ matrix.REQUIRES_RTTI }}
            SANITIZER_BUILD=${{ matrix.SANITIZER_BUILD }}
            SOLVERS=${{ matrix.SOLVERS }}
            STP_VERSION=${{ matrix.STP_VERSION }}
            TCMALLOC_VERSION=${{ matrix.TCMALLOC_VERSION }}
            UCLIBC_VERSION=${{ matrix.UCLIBC_VERSION }}
            USE_TCMALLOC=${{ matrix.USE_TCMALLOC }}
            USE_LIBCXX=${{ matrix.USE_LIBCXX }}
            Z3_VERSION=${{ matrix.Z3_VERSION }}
          cache-from: type=registry,ref=${{ matrix.registry_namespace }}llvm:latest
          cache-to: type=inline
          tags: |
            ${{ matrix.registry_namespace }}llvm:latest

      - name: Build and push stp image
        uses: docker/build-push-action@v2.2.2
        with:
          context: ./docker/02_stp
          push: true
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            REPOSITORY=${{ matrix.REPOSITORY }}
            COVERAGE=${{ matrix.COVERAGE }}
            DISABLE_ASSERTIONS=${{ matrix.DISABLE_ASSERTIONS }}
            ENABLE_DOXYGEN=${{ matrix.ENABLE_DOXYGEN }}
            ENABLE_OPTIMIZED=${{ matrix.ENABLE_OPTIMIZED }}
            ENABLE_DEBUG=${{ matrix.ENABLE_DEBUG }}
            GTEST_VERSION=${{ matrix.GTEST_VERSION }}
            KLEE_RUNTIME_BUILD=${{ matrix.KLEE_RUNTIME_BUILD }}
            LLVM_VERSION=${{ matrix.LLVM_VERSION }}
            METASMT_VERSION=${{ matrix.METASMT_VERSION }}
            MINISAT_VERSION=${{ matrix.MINISAT_VERSION }}
            REQUIRES_RTTI=${{ matrix.REQUIRES_RTTI }}
            SANITIZER_BUILD=${{ matrix.SANITIZER_BUILD }}
            SOLVERS=${{ matrix.SOLVERS }}
            STP_VERSION=${{ matrix.STP_VERSION }}
            TCMALLOC_VERSION=${{ matrix.TCMALLOC_VERSION }}
            UCLIBC_VERSION=${{ matrix.UCLIBC_VERSION }}
            USE_TCMALLOC=${{ matrix.USE_TCMALLOC }}
            USE_LIBCXX=${{ matrix.USE_LIBCXX }}
            Z3_VERSION=${{ matrix.Z3_VERSION }}
          cache-from: type=registry,ref=${{ matrix.registry_namespace }}stp:latest
          cache-to: type=inline
          tags: |
            ${{ matrix.registry_namespace }}stp:latest

      - name: Build and push z3 image
        uses: docker/build-push-action@v2.2.2
        with:
          context: ./docker/03_z3
          push: true
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            REPOSITORY=${{ matrix.REPOSITORY }}
            COVERAGE=${{ matrix.COVERAGE }}
            DISABLE_ASSERTIONS=${{ matrix.DISABLE_ASSERTIONS }}
            ENABLE_DOXYGEN=${{ matrix.ENABLE_DOXYGEN }}
            ENABLE_OPTIMIZED=${{ matrix.ENABLE_OPTIMIZED }}
            ENABLE_DEBUG=${{ matrix.ENABLE_DEBUG }}
            GTEST_VERSION=${{ matrix.GTEST_VERSION }}
            KLEE_RUNTIME_BUILD=${{ matrix.KLEE_RUNTIME_BUILD }}
            LLVM_VERSION=${{ matrix.LLVM_VERSION }}
            METASMT_VERSION=${{ matrix.METASMT_VERSION }}
            MINISAT_VERSION=${{ matrix.MINISAT_VERSION }}
            REQUIRES_RTTI=${{ matrix.REQUIRES_RTTI }}
            SANITIZER_BUILD=${{ matrix.SANITIZER_BUILD }}
            SOLVERS=${{ matrix.SOLVERS }}
            STP_VERSION=${{ matrix.STP_VERSION }}
            TCMALLOC_VERSION=${{ matrix.TCMALLOC_VERSION }}
            UCLIBC_VERSION=${{ matrix.UCLIBC_VERSION }}
            USE_TCMALLOC=${{ matrix.USE_TCMALLOC }}
            USE_LIBCXX=${{ matrix.USE_LIBCXX }}
            Z3_VERSION=${{ matrix.Z3_VERSION }}
          cache-from: type=registry,ref=${{ matrix.registry_namespace }}z3:latest
          cache-to: type=inline
          tags: |
            ${{ matrix.registry_namespace }}z3:latest

      - name: Build and push gtest image
        uses: docker/build-push-action@v2.2.2
        with:
          context: ./docker/04_gtest
          push: true
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            REPOSITORY=${{ matrix.REPOSITORY }}
            COVERAGE=${{ matrix.COVERAGE }}
            DISABLE_ASSERTIONS=${{ matrix.DISABLE_ASSERTIONS }}
            ENABLE_DOXYGEN=${{ matrix.ENABLE_DOXYGEN }}
            ENABLE_OPTIMIZED=${{ matrix.ENABLE_OPTIMIZED }}
            ENABLE_DEBUG=${{ matrix.ENABLE_DEBUG }}
            GTEST_VERSION=${{ matrix.GTEST_VERSION }}
            KLEE_RUNTIME_BUILD=${{ matrix.KLEE_RUNTIME_BUILD }}
            LLVM_VERSION=${{ matrix.LLVM_VERSION }}
            METASMT_VERSION=${{ matrix.METASMT_VERSION }}
            MINISAT_VERSION=${{ matrix.MINISAT_VERSION }}
            REQUIRES_RTTI=${{ matrix.REQUIRES_RTTI }}
            SANITIZER_BUILD=${{ matrix.SANITIZER_BUILD }}
            SOLVERS=${{ matrix.SOLVERS }}
            STP_VERSION=${{ matrix.STP_VERSION }}
            TCMALLOC_VERSION=${{ matrix.TCMALLOC_VERSION }}
            UCLIBC_VERSION=${{ matrix.UCLIBC_VERSION }}
            USE_TCMALLOC=${{ matrix.USE_TCMALLOC }}
            USE_LIBCXX=${{ matrix.USE_LIBCXX }}
            Z3_VERSION=${{ matrix.Z3_VERSION }}
          cache-from: type=registry,ref=${{ matrix.registry_namespace }}gtest:latest
          cache-to: type=inline
          tags: |
            ${{ matrix.registry_namespace }}gtest:latest

      - name: Build and push uclibc image
        uses: docker/build-push-action@v2.2.2
        with:
          context: ./docker/05_uclibc
          push: true
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            REPOSITORY=${{ matrix.REPOSITORY }}
            COVERAGE=${{ matrix.COVERAGE }}
            DISABLE_ASSERTIONS=${{ matrix.DISABLE_ASSERTIONS }}
            ENABLE_DOXYGEN=${{ matrix.ENABLE_DOXYGEN }}
            ENABLE_OPTIMIZED=${{ matrix.ENABLE_OPTIMIZED }}
            ENABLE_DEBUG=${{ matrix.ENABLE_DEBUG }}
            GTEST_VERSION=${{ matrix.GTEST_VERSION }}
            KLEE_RUNTIME_BUILD=${{ matrix.KLEE_RUNTIME_BUILD }}
            LLVM_VERSION=${{ matrix.LLVM_VERSION }}
            METASMT_VERSION=${{ matrix.METASMT_VERSION }}
            MINISAT_VERSION=${{ matrix.MINISAT_VERSION }}
            REQUIRES_RTTI=${{ matrix.REQUIRES_RTTI }}
            SANITIZER_BUILD=${{ matrix.SANITIZER_BUILD }}
            SOLVERS=${{ matrix.SOLVERS }}
            STP_VERSION=${{ matrix.STP_VERSION }}
            TCMALLOC_VERSION=${{ matrix.TCMALLOC_VERSION }}
            UCLIBC_VERSION=${{ matrix.UCLIBC_VERSION }}
            USE_TCMALLOC=${{ matrix.USE_TCMALLOC }}
            USE_LIBCXX=${{ matrix.USE_LIBCXX }}
            Z3_VERSION=${{ matrix.Z3_VERSION }}
          cache-from: type=registry,ref=${{ matrix.registry_namespace }}uclibc:latest
          cache-to: type=inline
          tags: |
            ${{ matrix.registry_namespace }}uclibc:latest

      - name: Build and push libcxx image
        uses: docker/build-push-action@v2.2.2
        with:
          context: ./docker/06_libcxx
          push: true
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            REPOSITORY=${{ matrix.REPOSITORY }}
            COVERAGE=${{ matrix.COVERAGE }}
            DISABLE_ASSERTIONS=${{ matrix.DISABLE_ASSERTIONS }}
            ENABLE_DOXYGEN=${{ matrix.ENABLE_DOXYGEN }}
            ENABLE_OPTIMIZED=${{ matrix.ENABLE_OPTIMIZED }}
            ENABLE_DEBUG=${{ matrix.ENABLE_DEBUG }}
            GTEST_VERSION=${{ matrix.GTEST_VERSION }}
            KLEE_RUNTIME_BUILD=${{ matrix.KLEE_RUNTIME_BUILD }}
            LLVM_VERSION=${{ matrix.LLVM_VERSION }}
            METASMT_VERSION=${{ matrix.METASMT_VERSION }}
            MINISAT_VERSION=${{ matrix.MINISAT_VERSION }}
            REQUIRES_RTTI=${{ matrix.REQUIRES_RTTI }}
            SANITIZER_BUILD=${{ matrix.SANITIZER_BUILD }}
            SOLVERS=${{ matrix.SOLVERS }}
            STP_VERSION=${{ matrix.STP_VERSION }}
            TCMALLOC_VERSION=${{ matrix.TCMALLOC_VERSION }}
            UCLIBC_VERSION=${{ matrix.UCLIBC_VERSION }}
            USE_TCMALLOC=${{ matrix.USE_TCMALLOC }}
            USE_LIBCXX=${{ matrix.USE_LIBCXX }}
            Z3_VERSION=${{ matrix.Z3_VERSION }}
          cache-from: type=registry,ref=${{ matrix.registry_namespace }}libcxx:latest
          cache-to: type=inline
          tags: |
            ${{ matrix.registry_namespace }}libcxx:latest

      - name: Build and push libcxx image
        uses: docker/build-push-action@v2.2.2
        with:
          context: ./docker/06_libcxx
          push: true
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            REPOSITORY=${{ matrix.REPOSITORY }}
            COVERAGE=${{ matrix.COVERAGE }}
            DISABLE_ASSERTIONS=${{ matrix.DISABLE_ASSERTIONS }}
            ENABLE_DOXYGEN=${{ matrix.ENABLE_DOXYGEN }}
            ENABLE_OPTIMIZED=${{ matrix.ENABLE_OPTIMIZED }}
            ENABLE_DEBUG=${{ matrix.ENABLE_DEBUG }}
            GTEST_VERSION=${{ matrix.GTEST_VERSION }}
            KLEE_RUNTIME_BUILD=${{ matrix.KLEE_RUNTIME_BUILD }}
            LLVM_VERSION=${{ matrix.LLVM_VERSION }}
            METASMT_VERSION=${{ matrix.METASMT_VERSION }}
            MINISAT_VERSION=${{ matrix.MINISAT_VERSION }}
            REQUIRES_RTTI=${{ matrix.REQUIRES_RTTI }}
            SANITIZER_BUILD=${{ matrix.SANITIZER_BUILD }}
            SOLVERS=${{ matrix.SOLVERS }}
            STP_VERSION=${{ matrix.STP_VERSION }}
            TCMALLOC_VERSION=${{ matrix.TCMALLOC_VERSION }}
            UCLIBC_VERSION=${{ matrix.UCLIBC_VERSION }}
            USE_TCMALLOC=${{ matrix.USE_TCMALLOC }}
            USE_LIBCXX=${{ matrix.USE_LIBCXX }}
            Z3_VERSION=${{ matrix.Z3_VERSION }}
          cache-from: type=registry,ref=${{ matrix.registry_namespace }}libcxx:latest
          cache-to: type=inline
          tags: |
            ${{ matrix.registry_namespace }}libcxx:latest
